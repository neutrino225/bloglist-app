{"ast":null,"code":"/** @format */\nimport axios from 'axios';\nconst baseUrl = 'http://localhost:3001/api/blogs'; ///api\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst addBlog = async (blog, token) => {\n  const config = {\n    headers: {\n      Authorization: `bearer ${token}`\n    }\n  };\n  const response = await axios.post(baseUrl, blog, config);\n  return response.data;\n};\n\nconst updateBlog = async (blog, token, id) => {\n  const config = {\n    headers: {\n      Authorization: `bearer ${token}`\n    }\n  };\n  const response = await axios.put(`${baseUrl}/${id}`, blog, config);\n  return response.data;\n};\n\nconst deleteBlog = async (blogid, token) => {\n  const config = {\n    headers: {\n      Authorization: `bearer ${token}`\n    }\n  };\n  const response = await axios.delete(`${baseUrl}/${blogid}`, config);\n  return response.data;\n};\n\nconst addComment = async (blogid, comment, token) => {\n  const config = {\n    headers: {\n      Authorization: `bearer ${token}`\n    }\n  };\n  const data = {\n    comment: comment\n  };\n  const response = axios.post(`http://localhost:3001/api/comments/${blogid}`, data, config);\n  return (await response).data;\n}; //eslint-disable-next-line\n\n\nexport default {\n  getAll,\n  addBlog,\n  updateBlog,\n  deleteBlog,\n  addComment\n};","map":{"version":3,"sources":["/home/neutrino/fsopen/part7/bloglist-frontend/src/services/blogs.js"],"names":["axios","baseUrl","getAll","request","get","then","response","data","addBlog","blog","token","config","headers","Authorization","post","updateBlog","id","put","deleteBlog","blogid","delete","addComment","comment"],"mappings":"AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,iCAAhB,C,CAAkD;;AAElD,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAhB;AACA,SAAOE,OAAO,CAACE,IAAR,CAAcC,QAAD,IAAcA,QAAQ,CAACC,IAApC,CAAP;AACD,CAHD;;AAKA,MAAMC,OAAO,GAAG,OAAOC,IAAP,EAAaC,KAAb,KAAuB;AACrC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAAjC;AADI,GAAf;AAGA,QAAMJ,QAAQ,GAAG,MAAMN,KAAK,CAACc,IAAN,CAAWb,OAAX,EAAoBQ,IAApB,EAA0BE,MAA1B,CAAvB;AACA,SAAOL,QAAQ,CAACC,IAAhB;AACD,CAND;;AAQA,MAAMQ,UAAU,GAAG,OAAON,IAAP,EAAaC,KAAb,EAAoBM,EAApB,KAA2B;AAC5C,QAAML,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAAjC;AADI,GAAf;AAGA,QAAMJ,QAAQ,GAAG,MAAMN,KAAK,CAACiB,GAAN,CAAW,GAAEhB,OAAQ,IAAGe,EAAG,EAA3B,EAA8BP,IAA9B,EAAoCE,MAApC,CAAvB;AACA,SAAOL,QAAQ,CAACC,IAAhB;AACD,CAND;;AAQA,MAAMW,UAAU,GAAG,OAAOC,MAAP,EAAeT,KAAf,KAAyB;AAC1C,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAAjC;AADI,GAAf;AAIA,QAAMJ,QAAQ,GAAG,MAAMN,KAAK,CAACoB,MAAN,CAAc,GAAEnB,OAAQ,IAAGkB,MAAO,EAAlC,EAAqCR,MAArC,CAAvB;AACA,SAAOL,QAAQ,CAACC,IAAhB;AACD,CAPD;;AASA,MAAMc,UAAU,GAAG,OAAOF,MAAP,EAAeG,OAAf,EAAwBZ,KAAxB,KAAkC;AACnD,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAAjC;AADI,GAAf;AAIA,QAAMH,IAAI,GAAG;AACXe,IAAAA,OAAO,EAAEA;AADE,GAAb;AAIA,QAAMhB,QAAQ,GAAGN,KAAK,CAACc,IAAN,CACd,sCAAqCK,MAAO,EAD9B,EAEfZ,IAFe,EAGfI,MAHe,CAAjB;AAKA,SAAO,CAAC,MAAML,QAAP,EAAiBC,IAAxB;AACD,CAfD,C,CAgBA;;;AACA,eAAe;AAAEL,EAAAA,MAAF;AAAUM,EAAAA,OAAV;AAAmBO,EAAAA,UAAnB;AAA+BG,EAAAA,UAA/B;AAA2CG,EAAAA;AAA3C,CAAf","sourcesContent":["/** @format */\n\nimport axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/blogs' ///api\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst addBlog = async (blog, token) => {\n  const config = {\n    headers: { Authorization: `bearer ${token}` },\n  }\n  const response = await axios.post(baseUrl, blog, config)\n  return response.data\n}\n\nconst updateBlog = async (blog, token, id) => {\n  const config = {\n    headers: { Authorization: `bearer ${token}` },\n  }\n  const response = await axios.put(`${baseUrl}/${id}`, blog, config)\n  return response.data\n}\n\nconst deleteBlog = async (blogid, token) => {\n  const config = {\n    headers: { Authorization: `bearer ${token}` },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${blogid}`, config)\n  return response.data\n}\n\nconst addComment = async (blogid, comment, token) => {\n  const config = {\n    headers: { Authorization: `bearer ${token}` },\n  }\n\n  const data = {\n    comment: comment,\n  }\n\n  const response = axios.post(\n    `http://localhost:3001/api/comments/${blogid}`,\n    data,\n    config\n  )\n  return (await response).data\n}\n//eslint-disable-next-line\nexport default { getAll, addBlog, updateBlog, deleteBlog, addComment }\n"]},"metadata":{},"sourceType":"module"}