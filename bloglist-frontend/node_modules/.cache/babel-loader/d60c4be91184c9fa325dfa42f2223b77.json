{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst notificationSlice = createSlice({\n  name: 'notification',\n  initialState: {\n    message: '',\n    messageState: null\n  },\n  reducers: {\n    setNotification(state, action) {\n      const message = action.payload.message;\n      const messageState = action.payload.messageState;\n      return {\n        message,\n        messageState\n      };\n    }\n\n  }\n});\nlet timeoutId;\nexport const {\n  setNotification\n} = notificationSlice.actions;\nexport const setMessage = (message, messageState) => {\n  return dispatch => {\n    clearTimeout(timeoutId);\n    dispatch(setNotification(message, messageState));\n    timeoutId = setTimeout(() => {\n      dispatch(setNotification({\n        message: '',\n        messageState: null\n      }));\n    }, 5000);\n  };\n};\nexport default notificationSlice.reducer;","map":{"version":3,"sources":["/home/neutrino/fsopen/part7/bloglist-frontend/src/reducers/notificationreducer.js"],"names":["createSlice","notificationSlice","name","initialState","message","messageState","reducers","setNotification","state","action","payload","timeoutId","actions","setMessage","dispatch","clearTimeout","setTimeout","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,iBAAiB,GAAGD,WAAW,CAAC;AACpCE,EAAAA,IAAI,EAAE,cAD8B;AAEpCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,EADG;AAEZC,IAAAA,YAAY,EAAE;AAFF,GAFsB;AAMpCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC7B,YAAML,OAAO,GAAGK,MAAM,CAACC,OAAP,CAAeN,OAA/B;AACA,YAAMC,YAAY,GAAGI,MAAM,CAACC,OAAP,CAAeL,YAApC;AAEA,aAAO;AAAED,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAP;AACD;;AANO;AAN0B,CAAD,CAArC;AAgBA,IAAIM,SAAJ;AAEA,OAAO,MAAM;AAAEJ,EAAAA;AAAF,IAAsBN,iBAAiB,CAACW,OAA9C;AAEP,OAAO,MAAMC,UAAU,GAAG,CAACT,OAAD,EAAUC,YAAV,KAA2B;AACnD,SAAQS,QAAD,IAAc;AACnBC,IAAAA,YAAY,CAACJ,SAAD,CAAZ;AACAG,IAAAA,QAAQ,CAACP,eAAe,CAACH,OAAD,EAAUC,YAAV,CAAhB,CAAR;AAEAM,IAAAA,SAAS,GAAGK,UAAU,CAAC,MAAM;AAC3BF,MAAAA,QAAQ,CAACP,eAAe,CAAC;AAAEH,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,YAAY,EAAE;AAA7B,OAAD,CAAhB,CAAR;AACD,KAFqB,EAEnB,IAFmB,CAAtB;AAGD,GAPD;AAQD,CATM;AAWP,eAAeJ,iBAAiB,CAACgB,OAAjC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst notificationSlice = createSlice({\n  name: 'notification',\n  initialState: {\n    message: '',\n    messageState: null,\n  },\n  reducers: {\n    setNotification(state, action) {\n      const message = action.payload.message\n      const messageState = action.payload.messageState\n\n      return { message, messageState }\n    },\n  },\n})\n\nlet timeoutId\n\nexport const { setNotification } = notificationSlice.actions\n\nexport const setMessage = (message, messageState) => {\n  return (dispatch) => {\n    clearTimeout(timeoutId)\n    dispatch(setNotification(message, messageState))\n\n    timeoutId = setTimeout(() => {\n      dispatch(setNotification({ message: '', messageState: null }))\n    }, 5000)\n  }\n}\n\nexport default notificationSlice.reducer\n"]},"metadata":{},"sourceType":"module"}